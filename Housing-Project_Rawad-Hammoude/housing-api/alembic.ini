# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = migrations

# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
# Uncomment the line below if you want the files to be prepended with date and time
# see https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file
# for all available tokens
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python>=3.9 or backports.zoneinfo library.
# Any required deps can installed by adding `alembic[tz]` to the pip requirements
# string value is passed to ZoneInfo()
# leave blank for localtime
# timezone =

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; This defaults
# to migrations/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path.
# The path separator used here should be the separator specified by "version_path_separator" below.
# version_locations = %(here)s/bar:%(here)s/bat:migrations/versions

# version path separator; As mentioned above, this is the character used to split
# version_locations. The default within new alembic.ini files is "os", which uses os.pathsep.
# If this key is omitted entirely, it falls back to the legacy behavior of splitting on spaces and/or commas.
# Valid values for version_path_separator are:
#
# version_path_separator = :
# version_path_separator = ;
# version_path_separator = space
version_path_separator = os  # Use os.pathsep. Default configuration used for new projects.

# set to 'true' to search source files recursively
# in each "version_locations" directory
# new in Alembic version 1.10
# recursive_version_locations = false

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

sqlalchemy.url = driver://user:pass@localhost/dbname


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# lint with attempts to fix using "ruff" - use the exec runner, execute a binary
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME

# Logging configuration
; Ce fichier de configuration est utilisé pour Alembic, un outil de migration de base de données pour SQLAlchemy.
; 
; [loggers] : Définit les loggers utilisés dans cette configuration.
; keys : Liste des loggers disponibles (root, sqlalchemy, alembic).
;
; [handlers] : Définit les gestionnaires de log utilisés pour la sortie des logs.
; keys : Liste des gestionnaires disponibles (console).
;
; [formatters] : Définit les formatteurs utilisés pour formater les messages de log.
; keys : Liste des formatteurs disponibles (generic).
;
; [logger_root] : Configuration du logger racine.
; level : Niveau de log (WARN).
; handlers : Gestionnaires associés (console).
; qualname : Nom qualifié du logger (vide pour le logger racine).
;
; [logger_sqlalchemy] : Configuration du logger pour SQLAlchemy.
; level : Niveau de log (WARN).
; handlers : Gestionnaires associés (aucun).
; qualname : Nom qualifié du logger (sqlalchemy.engine).
;
; [logger_alembic] : Configuration du logger pour Alembic.
; level : Niveau de log (INFO).
; handlers : Gestionnaires associés (aucun).
; qualname : Nom qualifié du logger (alembic).
;
; [handler_console] : Configuration du gestionnaire de log pour la console.
; class : Classe du gestionnaire (StreamHandler).
; args : Arguments passés au gestionnaire (sys.stderr,).
; level : Niveau de log (NOTSET).
; formatter : Formatteur utilisé (generic).
;
; [formatter_generic] : Configuration du formatteur générique.
; format : Format des messages de log (%(levelname)-5.5s [%(name)s] %(message)s).
; datefmt : Format de la date (%H:%M:%S).
;
; [alembic:main] : Configuration principale pour Alembic.
; sqlalchemy.url : URL de connexion à la base de données PostgreSQL (postgresql://postgres:postgres@localhost:5432/housing_db).
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

[alembic:main]
sqlalchemy.url = postgresql://postgres:postgres@localhost:5432/housing_db